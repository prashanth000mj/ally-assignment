{"version":3,"sources":["components/keyResult/KeyResult.js","components/objective/Objective.js","components/filter/Filter.js","components/filters/Filters.js","components/dialog/OKRDetails.js","components/okr/OKRs.js","App.js","index.js"],"names":["svgMarker","height","width","className","x1","y1","x2","y2","KeyResult","okr","index","selectOKR","charCode","prefixNumber","Math","floor","indexCharacter","String","fromCharCode","fontSize","color","title","onClick","defaultProps","Objective","keyResults","useState","expanded","setExpanded","onKeyResultSelect","selectedOKR","parentObjective","keyResultElements","map","keyResult","id","style","margin","padding","border","borderRadius","display","cursor","Filter","category","selected","toggleFilter","Filters","filters","selectedFilters","filter","has","Set","OKRDetails","onClose","Dialog","open","DialogTitle","DialogContent","dividers","metric_name","metric_start","metric_end","DialogActions","Button","getFiltersAndOkrs","data","okrs","forEach","add","parent","parent_objective_id","push","Array","from","OKRs","setOkrs","setFilters","setSelectedFilters","setSelectedOKR","loading","setLoading","error","setError","fetchDataFromApi","a","fetch","response","json","okrsFromAPI","filtersFromAPI","message","useEffect","LinearProgress","length","newSelectedFilters","delete","objectives","size","getFilteredObjectives","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89b6902e.chunk.js","sourcesContent":["import AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './KeyResult.css';\n\n// svg lines for tree kind marking\nconst svgMarker = (\n  <svg height='100%' width='5rem' className='key-result-marker'>\n    <line x1='1.87rem' y1='0' x2='1.87rem' y2='100%' className='marker'></line>\n    <line x1='1.87rem' y1='47%' x2='2.75rem' y2='47%' className='marker'></line>\n  </svg>\n);\n\n// for alphabets indexing\nconst charCodeStart = 97;\nconst alphabetsCount = 26;\n\nconst KeyResult = ({okr, index, selectOKR}) => {\n  // calculating the index fro key result. It goes as a,b,...z,1a,1b,...1z,2a,...\n  const charCode = charCodeStart + (index % alphabetsCount);\n  const prefixNumber = Math.floor(index/alphabetsCount);\n  const indexCharacter = `${prefixNumber > 0 ? prefixNumber : ''}${String.fromCharCode(charCode)}`;\n\n  return (\n    <div className='okr-item'>\n      <div className='key-result title-wrap'>\n        <AccountCircleOutlinedIcon fontSize='small' color='disabled'/>&emsp;\n        <span className='okr-title' title={okr.title} onClick={() => selectOKR(okr)}>\n          {indexCharacter}.&nbsp;&nbsp;{okr.title}</span>\n      </div>\n      {svgMarker}    \n    </div>\n  );\n};\n\nKeyResult.propTypes = {\n  okr: PropTypes.shape({\n    title: PropTypes.string\n  }).isRequired,\n  index: PropTypes.number ,\n  selectOKR: PropTypes.func, \n};\n\nKeyResult.defaultProps = {\n  index: 0,\n  selectOKR: () => {}, \n};\n\nexport default KeyResult;","import AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport ArrowRightOutlinedIcon from '@material-ui/icons/ArrowRightOutlined';\nimport ArrowDropDownOutlinedIcon from '@material-ui/icons/ArrowDropDownOutlined';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport KeyResult from '../keyResult/KeyResult';\nimport './Objective.css';\n\n// svg lines for tree kind marking\nconst svgMarker  = (\n  <svg height=\"35%\" className='objective-expansion-marker'>\n    <line x1=\"1.87rem\" y1=\"0\" x2=\"1.87rem\" y2=\"100%\" className='marker'></line>\n  </svg>\n);\n\nconst Objective = ({okr, keyResults, index, selectOKR}) => {\n  const [expanded, setExpanded] = useState(true);\n\n  const onKeyResultSelect = (selectedOKR) => {\n    selectOKR({\n      ...selectedOKR,\n      parentObjective: okr.title,\n    });\n  };\n  const keyResultElements = keyResults && \n    keyResults.map((keyResult , index) => (\n      <KeyResult\n        key={keyResult.id}\n        index={index}\n        okr={keyResult}\n        selectOKR={onKeyResultSelect}\n      />\n  ));\n\n  return (\n    <>\n      <div className='objective okr-item title-wrap'>\n        {!expanded && \n          <ArrowRightOutlinedIcon \n            fontSize='small' \n            className=\"objective-arrow\" \n            data-testid=\"expand-icon\"\n            onClick={() => setExpanded(true)}\n          />}\n        {expanded && \n          <ArrowDropDownOutlinedIcon \n            fontSize='small' \n            data-testid=\"colapse-icon\"\n            className='objective-arrow'\n            onClick={() => setExpanded(false)}\n          />}\n        <AccountCircleOutlinedIcon fontSize='small' color='disabled'/>&emsp;\n        <span className=\"okr-title\" title={okr.title} onClick={() => selectOKR(okr)}>\n          {index}.&nbsp;&nbsp;{okr.title}</span>\n        {expanded && keyResults && svgMarker}\n      </div>\n      {expanded && keyResultElements}\n    </>\n  );\n};\n\nObjective.propTypes = {\n  okr: PropTypes.shape({\n    title: PropTypes.string,\n  }).isRequired,\n  keyResults: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n  })),\n  index: PropTypes.number,\n  selectOKR: PropTypes.func,\n};\n\nObjective.defaultProps = {\n  keyResults: [],\n  index: 0,\n  selectOKR: () => {},\n};\n\nexport default Objective;","import React from 'react';\nimport PropTypes from 'prop-types';\nconst style = {\n  margin: '5px',\n  padding: '5px',\n  border: '1px solid lightgray',\n  borderRadius: '3px',\n  display: 'inline-block',\n  cursor: 'pointer',\n}\n\nconst Filter = ({category, selected, toggleFilter}) => {\n  return (\n    <label style={style} onClick={() => toggleFilter(category)} className={selected ? 'filter-selected' : ''}>\n      {category}\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  category: PropTypes.string.isRequired, \n  selected: PropTypes.bool, \n  toggleFilter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n  selected: false, \n  toggleFilter: () => {},\n};\n\nexport default Filter;","import React, { useState } from \"react\";\nimport ArrowRightOutlinedIcon from '@material-ui/icons/ArrowRightOutlined';\nimport ArrowDropDownOutlinedIcon from '@material-ui/icons/ArrowDropDownOutlined';\nimport PropTypes from 'prop-types';\nimport './Filters.css';\nimport Filter from '../filter/Filter';\n\n\n\nconst Filters = ({filters, selectedFilters, toggleFilter}) => {\n  const [expanded , setExpanded] = useState(true);\n  return (\n    <>\n      {!expanded && \n        <ArrowRightOutlinedIcon \n          fontSize='small' \n          className=\"filter-arrow\" \n          data-testid=\"filter-expand-icon\"\n          onClick={() => setExpanded(true)}\n        />}\n      {expanded && \n        <ArrowDropDownOutlinedIcon \n          fontSize='small' \n          data-testid=\"filter-colapse-icon\"\n          className='filter-arrow'\n          onClick={() => setExpanded(false)}\n        />}\n      <h4 id=\"filters-title\" onClick={() => setExpanded(!expanded)}>Filters</h4><br/>\n      {expanded && filters.map(filter => \n        <Filter key={filter} category={filter} toggleFilter={toggleFilter} selected={selectedFilters.has(filter)}/>\n      )}\n    </>\n  );\n};\n\nFilters.propTypes = {\n  filters: PropTypes.arrayOf(PropTypes.string).isRequired,\n  selectedFilters: PropTypes.shape(),\n  toggleFilter: PropTypes.func,\n};\n\nFilters.defaultProps = {\n  selectedFilters: new Set(),\n  toggleFilter: () => {},\n};\n\nexport default Filters;","import React from 'react';\nimport {\n  Dialog, DialogTitle, DialogActions, Button, DialogContent\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst OKRDetails = ({okr, onClose}) => {\n  return (\n    <Dialog open onClose={onClose} aria-labelledby=\"customized-dialog-title\">\n      <DialogTitle id=\"customized-dialog-title\" onClose={onClose}>\n          {okr.parentObjective ? 'Key Result' : 'Objective'}\n      </DialogTitle>\n      <DialogContent dividers>\n        <div><b>Title</b> : <i>{okr.title}</i></div>\n        {okr.parentObjective && <div><b>Objective</b> : <i>{okr.parentObjective}</i></div> }\n        <div><b>Category</b> : <i>{okr.category}</i></div>\n        <div><b>Metric Name</b> : <i>{okr.metric_name}</i></div>\n        <div><b>Metric Start</b> : <i>{okr.metric_start}</i></div>\n        <div><b>Metric End</b> : <i>{okr.metric_end}</i></div>\n      </DialogContent>\n      <DialogActions>\n          <Button onClick={onClose} >\n            Close\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nOKRDetails.propTypes = {\n  okr: PropTypes.shape({\n    title: PropTypes.string,\n    category: PropTypes.string,\n    metric_name: PropTypes.string,\n    metric_start: PropTypes.string,\n    metric_end: PropTypes.string,\n    parentObjective: PropTypes.string,\n  }).isRequired,\n  onClose: PropTypes.func,\n};\n\nOKRDetails.defaultProps = {\n  onClose: () => {},\n};\n\nexport default OKRDetails;","import React, {useEffect, useState} from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Objective from '../objective/Objective';\nimport Filters from '../filters/Filters';\nimport OKRDetails from '../dialog/OKRDetails';\n\n// data api can be moved o endpoints constant file\nconst okrsAPI = 'https://okrcentral.github.io/sample-okrs/db.json';\n\n// okrs grouping amd filter are exraced from api response\nconst getFiltersAndOkrs = (data) => {\n  const okrs = {};\n  const filters = new Set();\n  data.forEach(okr => {\n    filters.add(okr.category);\n    const parent = okr.parent_objective_id === '' ? 'objectives' : okr.parent_objective_id;\n    if(!(parent in okrs)){\n      okrs[parent] = [];\n    }\n    okrs[parent].push(okr);\n  });\n  return [okrs, Array.from(filters)];\n};\n\nconst OKRs = () => {\n  const [okrs, setOkrs] = useState({\n    'objectives': []\n  });\n  const [filters, setFilters] = useState([]);\n  const [selectedFilters, setSelectedFilters] = useState(new Set());\n  const [selectedOKR, setSelectedOKR] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  // data api call\n  const fetchDataFromApi = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(okrsAPI);\n      const {data} = await response.json();\n      const [okrsFromAPI, filtersFromAPI] = getFiltersAndOkrs(data);\n      setOkrs(okrsFromAPI);\n      setFilters(filtersFromAPI);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchDataFromApi();\n  }, []);\n\n  const toggleFilter = (filter) => {\n    const newSelectedFilters = new Set(selectedFilters);\n    if(newSelectedFilters.has(filter)){\n      newSelectedFilters.delete(filter);\n    }else{\n      newSelectedFilters.add(filter);\n    }\n    setSelectedFilters(newSelectedFilters);\n  };\n\n  const getFilteredObjectives = () => {\n    let objectives = okrs.objectives;\n    if(selectedFilters.size > 0){\n      objectives = objectives.filter(okr => selectedFilters.has(okr.category));\n    }\n    return objectives.map((okr, index) => (\n      <Objective \n        key={okr.id} \n        keyResults={okrs[okr.id]}\n        okr={okr}\n        index={index + 1}\n        selectOKR={setSelectedOKR}\n      />\n    ))\n  };\n\n  return (<section>\n    <h3>Objectives & Key Results</h3>\n    {loading && <LinearProgress/>}\n    {filters.length > 0 && <Filters filters={filters} toggleFilter={toggleFilter} selectedFilters={selectedFilters}/>}\n    { okrs.objectives &&  getFilteredObjectives() }\n    { error && <i>No data - {error}</i> }\n    {selectedOKR && <OKRDetails okr={selectedOKR} onClose={() => setSelectedOKR()}/>}\n  </section>);\n}\n\nexport default OKRs;","import React from 'react';\nimport './App.css';\nimport OKRs from './components/okr/OKRs';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Ally.io Assignment</h2>\n      </header>\n      <OKRs />\n    </div>\n  ); \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}